name: Pull request to main branch
on:
  pull_request:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "!.github/**"
      - "!assets/**"
      - "!docs"
      - "!src/docs/**"
      - "!README.md"
jobs:
  unit-testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-Pester-PSScriptAnalyzer-platyPS
      - name: Install from PSGallery
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository `
            -Name "PSGallery" `
            -InstallationPolicy "Trusted"
          
          Install-Module `
            -Name `
              Pester `
              , PSScriptAnalyzer `
              , platyPS `
              , Az.DesktopVirtualization
      - name: Generate external help file
        shell: pwsh
        run: |
          New-ExternalHelp `
            -Path "./docs" `
            -OutputPath "./src/Az.DesktopVirtualization.Utility/en-US" `
            -Force

          if ((Test-Path -Path "./src/Az.DesktopVirtualization.Utility/en-US/Az.DesktopVirtualization.Utility-help.xml")) {
            Remove-Item `
              -Path "./src/Az.DesktopVirtualization.Utility/en-US/Az.DesktopVirtualization.Utility-help.xml" `
              -Force
          }
          
          Rename-Item `
            -Path "./src/Az.DesktopVirtualization.Utility/en-US/rename-me-help.xml" `
            -NewName "Az.DesktopVirtualization.Utility-help.xml" `
            -Force
      - name: Lint with PSScriptAnalyzer
        shell: pwsh
        run: |
          Invoke-Expression `
            -Command "./test/Analyse.Scripts.ps1"
      - name: Perform a Pester test from the command-line
        shell: pwsh
        run: |
          Invoke-Pester `
            -Path "./test/Unit.Tests.ps1" `
            -Passthru  | Export-CliXml `
              -Path "./test/Unit.Tests.xml"
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: Unit-Tests-Result
          path: "./test/Unit.Tests.xml"
    if: ${{ always() }}
